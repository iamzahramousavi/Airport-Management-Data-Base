CREATE PROCEDURE U_Airline(@id_ int, @carrier_ VARCHAR(2), @name_ VARCHAR(50)) AS BEGIN BEGIN TRANSACTION BEGIN TRY  UPDATE Airline SET carrier = @carrier_, name = @name_ WHERE airline.ID = @id_ ; COMMIT TRANSACTION; END TRY BEGIN CATCH ROLLBACK TRANSACTION END CATCH END;
CREATE PROCEDURE U_Airplane(@tailnum_ VARCHAR(6), @year_ INTEGER, @manufacturer_ VARCHAR(50), @Model_ VARCHAR(50), @seats_ INTEGER, @Airline_ VARCHAR(2)) AS BEGIN BEGIN TRANSACTION BEGIN TRY  UPDATE Airplane SET year = @year_, manufacturer = @manufacturer_, Model = @Model_, seats = @seats_, Airline = @Airline_ WHERE airplane.tailnum = @tailnum_; COMMIT TRANSACTION; END TRY BEGIN CATCH ROLLBACK TRANSACTION END CATCH END;
CREATE PROCEDURE U_Airport(@Code_ VARCHAR(3), @Name_ VARCHAR(80), @Lat_ NUMERIC(15, 8), @Lon_ NUMERIC(15, 8), @City_ INTEGER) AS BEGIN BEGIN TRANSACTION BEGIN TRY  UPDATE Airport SET Name = @Name_, Lat = @Lat_, Lon = @Lon_, City = @City_ WHERE airport.Code = @Code_; COMMIT TRANSACTION; END TRY BEGIN CATCH ROLLBACK TRANSACTION END CATCH END;
CREATE PROCEDURE U_City(@ID_ INTEGER, @Name_ VARCHAR(50), @Country_ VARCHAR(20), @Population_ INTEGER, @Area_ INTEGER) AS BEGIN BEGIN TRANSACTION BEGIN TRY  UPDATE City SET Name = @Name_, Country = @Country_, Population = @Population_, Area = @Area_ WHERE ID = @ID_; COMMIT TRANSACTION; END TRY BEGIN CATCH ROLLBACK TRANSACTION END CATCH END;
CREATE PROCEDURE U_Flight(@ID_ INTEGER, @Date_ DATE, @FlightNumber_ INTEGER, @SchedArrTime_ INTEGER, @SchedDepTime_ INTEGER, @DepTime_ INTEGER, @ArrTime_ INTEGER, @Distance_ INTEGER, @Airline_ VARCHAR(2), @Airplane_ VARCHAR(6)) AS BEGIN BEGIN TRANSACTION BEGIN TRY  UPDATE Flight SET Date = @Date_, FlightNumber = @FlightNumber_, SchedArrTime = @SchedArrTime_, SchedDepTime = @SchedDepTime_, DepTime = @DepTime_, ArrTime = @ArrTime_, Distance = @Distance_, Airline = @Airline_, Airplane = @Airplane_ WHERE ID = @ID_; COMMIT TRANSACTION; END TRY BEGIN CATCH ROLLBACK TRANSACTION END CATCH END;
CREATE PROCEDURE U_FlightAttendant(@FAID_ INTEGER, @YearsOfService_ INTEGER, @Salary_ INTEGER, @Rank_ VARCHAR(10)) AS BEGIN BEGIN TRANSACTION BEGIN TRY  UPDATE FlightAttendant SET YearsOfService = @YearsOfService_, Salary = @Salary_, Rank = @Rank_ WHERE FAID = @FAID_; COMMIT TRANSACTION; END TRY BEGIN CATCH ROLLBACK TRANSACTION END CATCH END;
CREATE PROCEDURE U_Passenger(@PassengerID_ INTEGER, @FlyerStatus_ VARCHAR(10)) AS BEGIN BEGIN TRANSACTION BEGIN TRY  UPDATE Passenger SET FlyerStatus = @FlyerStatus_ WHERE PassengerID = @PassengerID_; COMMIT TRANSACTION; END TRY BEGIN CATCH ROLLBACK TRANSACTION END CATCH END;
CREATE PROCEDURE U_Person(@ID_ INTEGER, @FirstName_ VARCHAR(20), @LastName_ VARCHAR(20), @Sex_ VARCHAR(10), @Address_ VARCHAR(50), @DateOfBirth_ DATE, @Occupation_ VARCHAR(50), @City_ VARCHAR(50)) AS BEGIN BEGIN TRANSACTION BEGIN TRY  UPDATE Person SET FirstName = @FirstName_, LastName = @LastName_, Sex = @Sex_, Address = @Address_, DateOfBirth = @DateOfBirth_, Occupation = @Occupation_, City = @City_ WHERE  ID = @ID_; COMMIT TRANSACTION; END TRY BEGIN CATCH ROLLBACK TRANSACTION END CATCH END;
CREATE PROCEDURE U_Phone(@ID_ integer, @Type_ varchar(20), @Number_ integer) AS BEGIN BEGIN TRANSACTION BEGIN TRY  UPDATE Phone SET Type = @Type_, Number = @Number_ WHERE ID = @ID_; COMMIT TRANSACTION; END TRY BEGIN CATCH ROLLBACK TRANSACTION END CATCH END;
CREATE PROCEDURE U_Pilot(@PilotID_ INTEGER, @YearsOfService_ INTEGER, @Salary_ INTEGER, @Airline_ VARCHAR(2)) AS BEGIN BEGIN TRANSACTION BEGIN TRY  UPDATE Pilot SET YearsOfService = @YearsOfService_, Salary = @Salary_, Airline = @Airline_ WHERE PilotID = @PilotID_; COMMIT TRANSACTION; END TRY BEGIN CATCH ROLLBACK TRANSACTION END CATCH END;
CREATE PROCEDURE U_Take(@ID_ INTEGER, @Date_ DATE, @FlightNumber_ INTEGER, @SchedArrTime_ INTEGER, @SchedDepTime_ INTEGER, @PassengerID_ INTEGER, @Type_ VARCHAR(20), @Class_ VARCHAR(50), @FlightID_ INTEGER) AS BEGIN BEGIN TRANSACTION BEGIN TRY  UPDATE Take SET Type = @Type_, Class = @Class_ WHERE ID = @ID_; COMMIT TRANSACTION; END TRY BEGIN CATCH ROLLBACK TRANSACTION END CATCH END;